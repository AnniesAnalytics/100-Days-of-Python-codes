Try my auction! : 

from replit import clear
from art import logo
print(logo)
#setting up

bids = {}
bidding_finished = False
#1 Creating the list we will put the bids into, and then setting a variable which will allow us to stop taking bids

def find_highest_bidder(bidding_record):
#3 defining this function which will have the input of the bidding record which we have yet to create... they are temporally backwards
  highest_bid = 0
  winner = ""
  # 3.1 set up with variables which we will use and modify
  for bidder in bidding_record:
    bid_amount = bidding_record[bidder]
    # 3.2 bidder = the key, and bidding_record[bidder] = the value (ex. bidder = annie, then chris. bidding_record[bidder] = 15, then 5)
    if bid_amount > highest_bid: 
        #3.3 bid_amount = the value from the position of the for loop. that is why you can use the > 
      highest_bid = bid_amount 
      #3.4basically, highest_bid = bidding_record[bidder] that is the greatest value
      winner = bidder
      #3.5basically, winner = the key in bidding_record that they highest value is tied to.
  print(f"The winner is {winner} with a bid of ${highest_bid}")


while not bidding_finished:
  name = input("What is your name?: ")
  price = int(input("What is your bid?: $"))
  bids[name] = price
  #2 We need to take the bids to create a bidding record. After taking the input, we use bids[name]=price to add each new person and their bid to the {}
  should_continue = input("Are there any other bidders? Type 'yes or 'no'.\n")
  if should_continue == "no":
    bidding_finished = True
    find_highest_bidder(bids)
  elif should_continue == "yes":
      #2.1This is how we keep asking for more bidders or cut it off when they finish
    clear()
    #2.2this clears the screen bc it is "blind"
