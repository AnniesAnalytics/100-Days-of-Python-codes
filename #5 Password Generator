Try my password generator! You just need to click the green play button that says “run”: https://replit.com/@AnniesAnalytics/Annies-Band-Name-Generator?v=1

Skills used: 
Input function
Selecting a random sample from a list
Joining lists
Joining lists to create a string
print(f)

Skills learned after viewing the solution:
Append
Using a for loop with in range on a list of characters

Here is the password generator that I created. I did NOT look up any hints from the course instructor on how to do this! She did, however, provide a solution. After I finished I checked what she had put- I am including this down below since it is helping me learn.

symbol = random.sample(symbols, nr_symbols)
letter_symbol_number = letter + number + symbol
# Function to add them together 
easy_password = "".join(letter_symbol_number)
#if you put a space in between the "" then it will put a space between each value of the string.
print(f"Your new password is {easy_password}")
#easy password
hard_password_shuffle = random.shuffle(letter_symbol_number)
hard_password = "".join(letter_symbol_number)
print("If you would like a randomized version of this password:")
print(f"Your new password is {hard_password}")
 
 
Their version: What I learned from viewing their version after viewing mine was that when you use the “in range” function it does not just have to be in regards to a list of integers! This allows you to use in range to do a for loop on a list of words or letters- which is definitely what the point of this exercise was supposed to be. I tried it out several times and messed around with a few for loops and even brought in the append function but could not get it to work without that critical in range part of the code.
 
#Password Generator Project
import random
letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']
 
print("Welcome to the PyPassword Generator!")
nr_letters = int(input("How many letters would you like in your password?\n")) 
nr_symbols = int(input(f"How many symbols would you like?\n"))
nr_numbers = int(input(f"How many numbers would you like?\n"))
 
#Eazy Level
# password = ""
 
# for char in range(1, nr_letters + 1):
#   password += random.choice(letters)
 
# for char in range(1, nr_symbols + 1):
#   password += random.choice(symbols)
 
# for char in range(1, nr_numbers + 1):
#   password += random.choice(numbers)
 
# print(password)
 
#Hard Level
password_list = []
 
for char in range(1, nr_letters + 1):
  password_list.append(random.choice(letters))
#Using this for loop meant that for each character in the range you will loop. the range was from 1 to the end of the number of letters that the user selects but you have to add +1 or else it will stop short just before the last character in the string. It will take your password list(which you have created to be blank), and append a randomly chosen character from the letter string onto your password list
 
for char in range(1, nr_symbols + 1):
  password_list += random.choice(symbols)
 
for char in range(1, nr_numbers + 1):
  password_list += random.choice(numbers)
 
print(password_list)
random.shuffle(password_list)
print(password_list)
 
password = ""
for char in password_list:
  password += char
 
print(f"Your password is: {password}")
