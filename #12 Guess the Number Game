Try my game! https://replit.com/@AnniesAnalytics/Guess-the-number?v=1
Skills used:
-scope: working with global variables within a function to return a modification of it as a result of the local function (instead of changing the global)
-define a function and add a description
-defining each function to be used so there is just one clean game() function to run after they are all defined
-commenting code to understand later
-using an input and return in defined functions


code:
from random import randint
#from art import logo

EASY_TRIES = 10
HARD_TRIES = 5
#setup. Allows us to differentiate easy and hard without using big if blocks.

def check_answer(guess, answer, turns):
  """checks answer against guess. Returns the number of turns remaining."""
  if guess > answer:
    print("Too high.")
    return turns - 1
  elif guess < answer:
    print("Too low.")
    return turns - 1
  else:
    print(f"You got it! {answer} was correct.")
#This function will check their answer and number of guesses remaining

def set_difficulty():
  level = input("Do you want to play the 'easy' or 'hard' version?: ")
  if level == "easy":
    return EASY_TRIES
  else:
    return HARD_TRIES

def game():
  #print(logo)
  #Choosing a random number between 1 and 100.
  print("Welcome to the Number Guessing Game!")
  print("I'm thinking of a number between 1 and 100.")
  answer = randint(1, 100)
  #print(f"The correct answer is {answer}") 
  turns = set_difficulty()
  #Repeat the guessing functionality if they get it wrong.
  guess = 0
  while guess != answer:
    print(f"You have {turns} attempts remaining to guess the number.")
    guess = int(input("Make a guess: "))
    #First they guess
    turns = check_answer(guess, answer, turns)
    #Then we subtract turns if they are wrong.
    if turns == 0:
      print("You've run out of guesses, you lose.")
      return
    elif guess != answer:
      print("You may try again.")


game()
